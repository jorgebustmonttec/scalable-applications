services:
  server:
    build: server
    restart: unless-stopped
    volumes:
      - ./server:/app
    env_file:
      - project.env
    depends_on:
      - database
    # ⬇️  REMOVE the explicit port mapping – Traefik will expose it
    # ports:
    #   - 8000:8000
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.server-router.entrypoints=web"
      - "traefik.http.routers.server-router.rule=PathPrefix(`/api`)"
      - "traefik.http.services.server-service.loadbalancer.server.port=8000"


  client:
    build: client
    restart: unless-stopped
    volumes:
      - ./client/src:/app/src
      - ./client/public:/app/public
      - ./client/astro.config.mjs:/app/astro.config.mjs:ro
      - client_node_modules:/app/node_modules
      - client_deno_dir:/app/.deno
    depends_on:
      - server
    # ⬇️  Hide Astro’s port; Traefik will expose it
    # ports:
    #   - "4321:4321"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.client-router.entrypoints=web"
      - "traefik.http.routers.client-router.rule=PathPrefix(`/`)"
      - "traefik.http.services.client-service.loadbalancer.server.port=4321"


  k6-tests:
    entrypoint: "/bin/true"          # idle until invoked
    build: k6-tests
    volumes:
      - ./k6-tests/tests:/tests      # live-edit test scripts
    depends_on:
      - client
  
  database:
    container_name: postgresql_database
    image: postgres:17.0
    restart: unless-stopped
    env_file:
      - project.env
    command: >
      postgres
      -c shared_preload_libraries=auto_explain,pg_stat_statements
      -c auto_explain.log_min_duration=10
    volumes:
      - ./postgres-data:/var/lib/postgresql/data


  database-migrations:
    image: flyway/flyway:10
    env_file:
      - project.env
    depends_on:
      - database
    volumes:
      - ./database-migrations:/flyway/sql
    command: -connectRetries=60 -baselineOnMigrate=true migrate

  redis:
    image: redis:7.4.2
    command: redis-server /usr/local/etc/redis/redis.conf
    volumes:
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf

  grader:
    build: grader
    restart: unless-stopped
    volumes:
      - ./grader:/app
    env_file:
      - project.env
    depends_on:
      - redis
      - database
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grader-api.rule=PathPrefix(`/grader-api`)"
      - "traefik.http.routers.grader-api.middlewares=grader-api-replacepath"
      - "traefik.http.middlewares.grader-api-replacepath.replacePathRegex.regex=^/grader-api(.*)"
      - "traefik.http.middlewares.grader-api-replacepath.replacePathRegex.replacement=/grader-api$1"
      - "traefik.http.services.grader-api.loadbalancer.server.port=8000"


  traefik:
    image: traefik:v3.3
    command:
      - "--api.insecure=true"             # dev-only dashboard on :8080
      - "--providers.docker=true"         # watch Docker labels
      - "--entrypoints.web.address=:8000" # all external traffic enters here
    ports:
      - "8080:8080"   # Traefik UI  →  http://localhost:8080
      - "8000:8000"   # public entrypoint → http://localhost:8000
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

  lgtm:
    image: grafana/otel-lgtm:0.8.6
    ports:
      - "3000:3000"
      - "4318:4318"
    volumes:
      - ./lgtm-data:/data 




volumes:
  client_node_modules:
  client_deno_dir:

